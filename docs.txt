general notes 
  ** express add contentType for you can override this.
  ** public folder => best practice name for the folder which (convention ) indicate that this a folder hold content which are 
     always exposed to public crowd  so you don't need any permission to access it so all the files in it not accessible for the users
 
 

1- routing in express  

  A- the filtering of requests form top to bottom check on method and the path if matched then this middleware will handle the request,
    if not the last middleware will handle un matched request(404 error page).

  B- there are two calling for routes outsource (admin and shop) routes and  catch all routes (404)

  c- in outsource routes sometimes the paths have a common starting ex: 
     - '/admin/add-product'
     - '/admin/product'
       so like this we can take the duplicated part from paths in router file and put it in app.js with middleware of this route
       the if we need to trigger this route like this =>http://localhost:3000/admin/add-product 

  D- the same path can de used in case different methods 

2- MVC => model view controller structure 
  * views : what we serve to the user in one place of our application in the views folder

3- serve the files statically with express 
  * (express.static(here the path of the folder or a file you want to serve it statically ))
  * it can be css files, images ,etc ...
  * what happened ? i make public folder is public so i can access any file in it with hit the filename after / with command
    app.use(path.static())  


4- templating engine => we need to put dynamic content in html  
   * HTMLish Template: you put placeholder in html and then replace it with real content
   * you have templating engine which understands a certain syntax => scan html-ish  and replace the placeholders with real html content
   * this content which is generated on the fly  
   * in the end we get html file which send to the user => nerve see template or placeholder cuze it's happened on the server

   ** available templating engine **
     1- EJS => <p><%= name %></p>  : use normal html and plain js in your template
     2- PUG(Jade) => p #{name}  : use minimal HTML and custom template language
     3- Handlebars => <p> { {name} }</p> : use normal html and custom template language
  
   * app.set() => allows us to set any values globally on our express application
                  this can be keys or config items express does not understands
                - in  this case we ignore them but we could read them from the app object with app.get()
                  this is another way to share data across our app => look in express docs